#!/usr/bin/python3
from relib.arguments import Arguments
from relib.buildhelper import Environment

args = Arguments()
environ = Environment()

if __name__ == "__main__":
    # to build the docker file with customizations
    if args.hasCommands(['build']):
        if args.hasOptions(['--tag']) and args.hasOptions(['--path']):
            environ.build(tag=args.getOptionValue('--tag'),path=args.getOptionValue('--path'))
        else:
            environ.build(tag="reversesium:v1",path=".")

    # Start a new session for reverse engineering
    if args.hasCommands(['startsession']):
        if args.hasOptions(['--session']) and args.hasOptions(['--host']) and args.hasOptions(['--network']) and args.hasOptions(['--username']):
            environ.start_session(sessionname=args.getOptionValue('--session'), hostname=args.getOptionValue('--host'),network=args.getOptionValue('--network'),username=args.getOptionValue('--username'))
        elif args.hasOptions(['--session']) and args.hasOptions(['--host']) and args.hasOptions(['--network']) and args.hasOptions(['--username']):
            environ.start_session(sessionname=args.getOptionValue('--session'), hostname=args.getOptionValue('--host'),network=args.getOptionValue('--network'),username=args.getOptionValue('--username'))
        else:
            print("\n[*] Missing options --session= --host= --network= --username")

    # Get the shell for the session
    elif args.hasCommands(['shell']):
        if args.hasOptions(['--session']) and args.hasOptions(['--username']):
            environ.spawn_shell(sessionname=args.getOptionValue('--session'),username=args.getOptionValue('--username'))
        else:
            print("\n[*] Missing option --session= ")
    elif args.hasCommands(['stopsession']):
        if args.hasOptions(['--session']):
            environ.stop_session(sessionname=args.getOptionValue('--session'))
        else:
            print("\n[*] Missing option --session= ")
    elif args.hasCommands(['currentsession']):
        environ.current_sessions()